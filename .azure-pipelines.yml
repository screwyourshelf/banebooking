trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: BanebookingSecrets

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '8.0.x'

- task: NodeTool@0
  inputs:
    versionSpec: '20.x'

- checkout: self

- task: Cache@2
  inputs:
    key: 'npm | "$(Agent.OS)" | Banebooking.Api/ClientApp/package-lock.json'
    restoreKeys: |
      npm | "$(Agent.OS)"
    path: 'Banebooking.Api/ClientApp/node_modules'
  displayName: 'Cache node_modules'

- script: |
    cd Banebooking.Api/ClientApp
    npm install
    npm run build
    mkdir -p ../../wwwroot
    cp -r dist/* ../../wwwroot/
  displayName: Bygg frontend med Vite
 
- script: |
    dotnet tool install --global dotnet-ef
    export PATH="$PATH:/root/.dotnet/tools"
  displayName: 'Installer dotnet-ef'
 
- script: |
    dotnet ef database update --project Banebooking.Api/Banebooking.Api.csproj --startup-project Banebooking.Api/Banebooking.Api.csproj
  displayName: 'Kjør EF migrasjoner mot prod DB'
  env:
    ConnectionStrings__DefaultConnection: $(SUPABASE_CONNECTIONSTRING)

- script: |
    curl -L https://fly.io/install.sh | sh
    export PATH="$HOME/.fly/bin:$PATH"
    flyctl deploy --remote-only --config fly.toml
  env:
    FLY_API_TOKEN: $(FLY_API_TOKEN)
    SUPABASE_CONNECTIONSTRING: $(SUPABASE_CONNECTIONSTRING)
  displayName: 'Deploy to Fly.io'
  
- script: |
    echo "Venter litt før healthcheck..."
    sleep 10

    echo "Kaller /api/health/db"
    curl -f https://banebooking.fly.dev/api/health/db
  displayName: 'Verifiser at app kjører og har DB-tilkobling'

